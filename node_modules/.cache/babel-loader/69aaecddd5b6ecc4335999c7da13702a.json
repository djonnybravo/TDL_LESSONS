{"ast":null,"code":"var _jsxFileName = \"F:\\\\todolist_homeworks\\\\src\\\\Todolist.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todolist = props => {\n  let tasksList = props.tasks.length ? props.tasks.map(task => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.isDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.removeTask(task.id),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"Your taskslist is empty\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 11\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.changeFilter(\"all\"),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.changeFilter(\"active\"),\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.changeFilter(\"completed\"),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nexport default Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Todolist","props","tasksList","tasks","length","map","task","isDone","title","removeTask","id","changeFilter"],"sources":["F:/todolist_homeworks/src/Todolist.tsx"],"sourcesContent":["import React from 'react';\r\nimport {FilterValuesType} from \"./App\";\r\n\r\ntype TodolistType = {\r\n    title: string\r\n    tasks: Array<taskType>\r\n    removeTask: (taskId: string) => void\r\n    changeFilter: (filter:FilterValuesType) => void\r\n    addTask: () => void\r\n   }\r\n\r\nexport type taskType = {\r\n    id: string\r\n    title: string,\r\n    isDone: boolean;\r\n\r\n}\r\nconst Todolist = (props: TodolistType) => {\r\n    let tasksList = props.tasks.length\r\n        ? props.tasks.map((task:taskType) => {\r\n\r\n            return (\r\n                <li key={task.id}>\r\n                    <input type=\"checkbox\" checked={task.isDone}/>\r\n                    <span>{task.title}</span>\r\n                    <button onClick={() => props.removeTask(task.id)}>X</button>\r\n                </li>\r\n            )\r\n        })\r\n        : <span>Your taskslist is empty</span>\r\n    return (\r\n        <div>\r\n            <h3>{props.title}</h3>\r\n            <div>\r\n                <input/>\r\n                <button>+</button>\r\n            </div>\r\n            <ul>\r\n                {tasksList}\r\n            </ul>\r\n            <div>\r\n                <button onClick={() => props.changeFilter(\"all\")} >All</button>\r\n                <button onClick={() => props.changeFilter(\"active\")}>Active</button>\r\n                <button onClick={() => props.changeFilter(\"completed\")}>Completed</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todolist;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAiB1B,MAAMC,QAAQ,GAAIC,KAAmB,IAAK;EACtC,IAAIC,SAAS,GAAGD,KAAK,CAACE,KAAK,CAACC,MAAM,GAC5BH,KAAK,CAACE,KAAK,CAACE,GAAG,CAAEC,IAAa,IAAK;IAEjC,oBACI;MAAA,wBACI;QAAO,IAAI,EAAC,UAAU;QAAC,OAAO,EAAEA,IAAI,CAACC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE,eAC9C;QAAA,UAAOD,IAAI,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eACzB;QAAQ,OAAO,EAAE,MAAMP,KAAK,CAACQ,UAAU,CAACH,IAAI,CAACI,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA,GAHvDJ,IAAI,CAACI,EAAE;MAAA;MAAA;MAAA;IAAA,QAIX;EAEb,CAAC,CAAC,gBACA;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAoC;EAC1C,oBACI;IAAA,wBACI;MAAA,UAAKT,KAAK,CAACO;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAA,wBACI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACR;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA;MAAA;MAAA;MAAA;IAAA,QAChB,eACN;MAAA,UACKN;IAAS;MAAA;MAAA;MAAA;IAAA,QACT,eACL;MAAA,wBACI;QAAQ,OAAO,EAAE,MAAMD,KAAK,CAACU,YAAY,CAAC,KAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eAC/D;QAAQ,OAAO,EAAE,MAAMV,KAAK,CAACU,YAAY,CAAC,QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eACpE;QAAQ,OAAO,EAAE,MAAMV,KAAK,CAACU,YAAY,CAAC,WAAW,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB;IAAA;MAAA;MAAA;MAAA;IAAA,QACxE;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,KA9BIX,QAAQ;AAgCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
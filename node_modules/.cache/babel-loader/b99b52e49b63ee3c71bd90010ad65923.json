{"ast":null,"code":"var _jsxFileName = \"/Users/djonnybravo/projects/todolist/src/Todolist.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todolist = props => {\n  let tasksList = props.tasks.length ? props.tasks.map(task => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.isDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"Your taskslist is empty\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 11\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = Todolist;\nexport default Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Todolist","props","tasksList","tasks","length","map","task","isDone","title"],"sources":["/Users/djonnybravo/projects/todolist/src/Todolist.tsx"],"sourcesContent":["import React from 'react';\n\ntype TodolistType = {\n    title: string\n    tasks: Array<taskType>\n\n}\n\nexport type taskType = {\n    id: number\n    title: string,\n    isDone: boolean;\n\n}\nconst Todolist = (props: TodolistType) => {\n    let tasksList = props.tasks.length\n        ? props.tasks.map((task:taskType) => {\n            return (\n                <li>\n                    <input type=\"checkbox\" checked={task.isDone}/>\n                    <span>{task.title}</span>\n                </li>\n            )\n        })\n        : <span>Your taskslist is empty</span>\n    return (\n        <div>\n            <h3>{props.title}</h3>\n            <div>\n                <input/>\n                <button>+</button>\n            </div>\n            <ul>\n                {tasksList}\n            </ul>\n            <div>\n                <button>All</button>\n                <button>Active</button>\n                <button>Completed</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Todolist;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAc1B,MAAMC,QAAQ,GAAIC,KAAmB,IAAK;EACtC,IAAIC,SAAS,GAAGD,KAAK,CAACE,KAAK,CAACC,MAAM,GAC5BH,KAAK,CAACE,KAAK,CAACE,GAAG,CAAEC,IAAa,IAAK;IACjC,oBACI;MAAA,wBACI;QAAO,IAAI,EAAC,UAAU;QAAC,OAAO,EAAEA,IAAI,CAACC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE,eAC9C;QAAA,UAAOD,IAAI,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACxB;EAEb,CAAC,CAAC,gBACA;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAoC;EAC1C,oBACI;IAAA,wBACI;MAAA,UAAKP,KAAK,CAACO;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAA,wBACI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACR;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA;MAAA;MAAA;MAAA;IAAA,QAChB,eACN;MAAA,UACKN;IAAS;MAAA;MAAA;MAAA;IAAA,QACT,eACL;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eACvB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B;IAAA;MAAA;MAAA;MAAA;IAAA,QACxB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,KA5BIF,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
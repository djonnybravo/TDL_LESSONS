{"ast":null,"code":"var _jsxFileName = \"F:\\\\todolist_homeworks\\\\src\\\\Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todolist = props => {\n  _s();\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n  const onNewTitleChangeHandler = e => {\n    setNewTaskTitle(e.currentTarget.value);\n  };\n  const onKeyPressHandler = e => {\n    if (e.charCode === 13) {\n      props.addTask(newTaskTitle);\n      setNewTaskTitle('');\n    }\n  };\n  const addTask = () => {\n    props.addTask(newTaskTitle);\n    setNewTaskTitle('');\n  };\n  const onAllClickHandler = () => props.changeFilter(\"all\");\n  const onActiveClickHandler = () => props.changeFilter(\"active\");\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\");\n  let tasksList = props.tasks.length ? props.tasks.map(task => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.isDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask => props.removeTask(task.id),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"Your taskslist is empty\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newTaskTitle,\n        onChange: onNewTitleChangeHandler,\n        onKeyPress: onKeyPressHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAllClickHandler,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onActiveClickHandler,\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCompletedClickHandler,\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"TcBfVxrQkSHjKpANZuPMBBsm9Tg=\");\n_c = Todolist;\nexport default Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Todolist","props","newTaskTitle","setNewTaskTitle","onNewTitleChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode","addTask","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","tasksList","tasks","length","map","task","isDone","title","removeTask","id"],"sources":["F:/todolist_homeworks/src/Todolist.tsx"],"sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {FilterValuesType} from \"./App\";\r\n\r\n\r\ntype TodolistType = {\r\n    title: string\r\n    tasks: Array<taskType>\r\n    removeTask: (taskId: string) => void\r\n    changeFilter: (filter: FilterValuesType) => void\r\n    addTask: (title: string) => void\r\n}\r\n\r\nexport type taskType = {\r\n    id: string\r\n    title: string,\r\n    isDone: boolean;\r\n\r\n}\r\nconst Todolist = (props: TodolistType) => {\r\n\r\n    const [newTaskTitle, setNewTaskTitle] = useState(\"\");\r\n    const onNewTitleChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewTaskTitle(e.currentTarget.value)\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            props.addTask(newTaskTitle);\r\n            setNewTaskTitle('')\r\n        }\r\n    }\r\n    const addTask = () => {\r\n        props.addTask(newTaskTitle);\r\n        setNewTaskTitle('')\r\n    }\r\n    const onAllClickHandler = () => props.changeFilter(\"all\")\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\")\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\")\r\n\r\n    let tasksList = props.tasks.length\r\n        ? props.tasks.map((task: taskType) => {\r\n\r\n            return (\r\n                <li key={task.id}>\r\n                    <input type=\"checkbox\" checked={task.isDone}/>\r\n                    <span>{task.title}</span>\r\n                    <button onClick={(addTask) => props.removeTask(task.id)}>X</button>\r\n                </li>\r\n            )\r\n        })\r\n        : <span>Your taskslist is empty</span>\r\n    return (\r\n        <div>\r\n            <h3>{props.title}</h3>\r\n            <div>\r\n                <input value={newTaskTitle} onChange={onNewTitleChangeHandler} onKeyPress={onKeyPressHandler}/>\r\n                <button onClick={addTask}>+</button>\r\n            </div>\r\n            <ul>\r\n                {tasksList}\r\n            </ul>\r\n            <div>\r\n                <button onClick={onAllClickHandler}>All</button>\r\n                <button onClick={onActiveClickHandler}>Active</button>\r\n                <button onClick={onCompletedClickHandler}>Completed</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todolist;"],"mappings":";;AAAA,OAAOA,KAAK,IAA+BC,QAAQ,QAAO,OAAO;AAAC;AAkBlE,MAAMC,QAAQ,GAAIC,KAAmB,IAAK;EAAA;EAEtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMK,uBAAuB,GAAIC,CAAgC,IAAK;IAClEF,eAAe,CAACE,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;EAC1C,CAAC;EACD,MAAMC,iBAAiB,GAAIH,CAAkC,IAAK;IAC9D,IAAIA,CAAC,CAACI,QAAQ,KAAK,EAAE,EAAE;MACnBR,KAAK,CAACS,OAAO,CAACR,YAAY,CAAC;MAC3BC,eAAe,CAAC,EAAE,CAAC;IACvB;EACJ,CAAC;EACD,MAAMO,OAAO,GAAG,MAAM;IAClBT,KAAK,CAACS,OAAO,CAACR,YAAY,CAAC;IAC3BC,eAAe,CAAC,EAAE,CAAC;EACvB,CAAC;EACD,MAAMQ,iBAAiB,GAAG,MAAMV,KAAK,CAACW,YAAY,CAAC,KAAK,CAAC;EACzD,MAAMC,oBAAoB,GAAG,MAAMZ,KAAK,CAACW,YAAY,CAAC,QAAQ,CAAC;EAC/D,MAAME,uBAAuB,GAAG,MAAMb,KAAK,CAACW,YAAY,CAAC,WAAW,CAAC;EAErE,IAAIG,SAAS,GAAGd,KAAK,CAACe,KAAK,CAACC,MAAM,GAC5BhB,KAAK,CAACe,KAAK,CAACE,GAAG,CAAEC,IAAc,IAAK;IAElC,oBACI;MAAA,wBACI;QAAO,IAAI,EAAC,UAAU;QAAC,OAAO,EAAEA,IAAI,CAACC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE,eAC9C;QAAA,UAAOD,IAAI,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eACzB;QAAQ,OAAO,EAAGX,OAAO,IAAKT,KAAK,CAACqB,UAAU,CAACH,IAAI,CAACI,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA,GAH9DJ,IAAI,CAACI,EAAE;MAAA;MAAA;MAAA;IAAA,QAIX;EAEb,CAAC,CAAC,gBACA;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAoC;EAC1C,oBACI;IAAA,wBACI;MAAA,UAAKtB,KAAK,CAACoB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAA,wBACI;QAAO,KAAK,EAAEnB,YAAa;QAAC,QAAQ,EAAEE,uBAAwB;QAAC,UAAU,EAAEI;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAE,eAC/F;QAAQ,OAAO,EAAEE,OAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC,eACN;MAAA,UACKK;IAAS;MAAA;MAAA;MAAA;IAAA,QACT,eACL;MAAA,wBACI;QAAQ,OAAO,EAAEJ,iBAAkB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eAChD;QAAQ,OAAO,EAAEE,oBAAqB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eACtD;QAAQ,OAAO,EAAEC,uBAAwB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1D;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GAjDId,QAAQ;AAAA,KAARA,QAAQ;AAmDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}